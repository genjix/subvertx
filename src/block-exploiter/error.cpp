#include "error.hpp"

const char* be_error_category_impl::name() const
{
    return "block-exploiter";
}

std::string be_error_category_impl::message(int ev) const
{
    be_error ec = static_cast<be_error>(ev);
    switch (ec)
    {
        case be_error::wrong_arguments:
            return "Wrong number of arguments";
        case be_error::invalid_command:
            return "Invalid command specified";
        default:
            return "Unknown error";
    }
}

const std::error_category& error_category()
{
    static be_error_category_impl instance;
    return instance;
}

std::error_code make_error_code(be_error e)
{
    return std::error_code(static_cast<int>(e), error_category());
}

std::error_condition make_error_condition(be_error e)
{
    return std::error_condition(static_cast<int>(e), error_category());
}

