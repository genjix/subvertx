#ifndef BLOCK_EXPLOITER_ERROR_H
#define BLOCK_EXPLOITER_ERROR_H

#include <system_error>

enum class be_error
{
    wrong_arguments = 1,
    invalid_command
};

class be_error_category_impl
  : public std::error_category
{
public:
    virtual const char* name() const;
    virtual std::string message(int ev) const;
};

const std::error_category& error_category();

std::error_code make_error_code(be_error e);
std::error_condition make_error_condition(be_error e);

namespace std
{
    template <>
    struct is_error_code_enum<be_error>
      : public true_type {};
}

#endif

