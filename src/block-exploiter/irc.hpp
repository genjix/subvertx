#ifndef BLOCK_EXPLOITER_IRC
#define BLOCK_EXPLOITER_IRC

#include "actuator.hpp"

using boost::asio::streambuf;

class irc
  : public std::enable_shared_from_this<irc>
{
public:
    irc(async_service& service);
    void run(actuator_ptr act);
    void message(const std::string& msg);
    bool reply(const std::string& line);

private:
    typedef std::shared_ptr<tcp::resolver> resolver_ptr;
    typedef std::shared_ptr<tcp::resolver::query> query_ptr;

    void resolve_handler(const boost::system::error_code& ec,
        tcp::resolver::iterator endpoint_iterator, resolver_ptr, query_ptr);
    void connect_handler(const boost::system::error_code& ec, 
        tcp::resolver::iterator);
    void read_line(const boost::system::error_code& ec,
        size_t bytes_transferred);
    void handle_send(const boost::system::error_code& ec);

    void send_raw_line(const std::string& message);

    async_service& service_;

    socket_ptr socket_;
    streambuf data_;
    actuator_ptr actuator_;
};

#endif

